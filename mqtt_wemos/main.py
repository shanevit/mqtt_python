####################################### verze 2.3.2020# dodelat publikovani z slovniku#########################################bus = machine.I2C(sda=machine.Pin(21),scl=machine.Pin(22))#bmp = BMP280(bus)topic_sub = b'esp32/temp'#topic_pub2 = b'esp32/press'last_message = 0message_interval = 10counter = 0client_id = ubinascii.hexlify(machine.unique_id())station = network.WLAN(network.STA_IF)station.active(True)mqtt_server = pripoj_se_scan(station) # pripoji se k wifi a vrati adresu MQTT serveruled = machine.Pin(16, machine.Pin.OUT)cas_konec = 0try:    client = connect()except OSError as e:    restart_and_reconnect()while True:    if ((utime.time() - last_message) >= message_interval) or not last_message:        #teplota = bmp.temperature        #tlak = bmp.pressure        teplota = 'Ahoj!'        msg = b'{}'.format(teplota)        #msg2 = b'{}'.format(tlak)        publish_msg(topic_pub, msg)        #publish_msg(topic_pub2, msg2)        last_message = utime.time()        #zapni bliknuti        blink_ms(100)        print('{}: {}'.format(last_message,teplota))        #print('{}: {}'.format(last_message,tlak))    #kontroluj jestli nema zhasnout        blink_ms()